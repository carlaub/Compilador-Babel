//Error en declaració de constants i variables

//const <id> = <exp>;
const LINIA = -3;

//var <id>: <tipus>;
var variable1 : LOGIC;
const asdf = CERT;
const patata = -2+10*5+5-13-34*0+5;
const patata = 4*7+1;
const patata = 4*7*3;
const patata = 4*7/2;
const patata = -4*7;
var variable2: vector[0..10] de SENCER;
var i: SENCER;

//funcio <id>(<ll_param>): <tipus_simple>;
//	var <id>: <tipus>;
//	func
//		<ll_instr>
//	fifunc;

funcio suma(perval valor1: SENCER, perval valor2: SENCER): SENCER;
	var resultat: SENCER;
	func
		resultat = valor1+valor2;
		retornar resultat;
	fifunc;

//prog
//	<ll_instr>
//fiprog

prog
	i=0;

	mentre i<10 fer

		//Si hi ha un error a "mentre", "percada", ... passa que al trobar el fimentre, com que es pot donar no ho veu malament i puja fins a esperar fiprog
		//Una possible solució és guardar el nivell de "mentre" al que estem i si ens trobem "fimentre" quan estem al nivell 0 vol dir que està malament

	//	escriure("Resultat de ", i, "+", 10-i, ": ", suma(i,10-i));	//Salten diversos errors per una cagada de l'inici
		i=i;
		x=3;

	fimentre;
		//Si "fimentre" està mal escrit no acaba mai l'estructura de "mentre"
		//Passa el mateix amb les altres estructures que contenen llistes d'instruccions

	percada valor en variable2 fer
		escriure(valor);
	fiper;

	si a == b llavors
		escriure("patata");
	fisi;

	i=0;
	cicle
		si i<>2 llavors
			escriure(variable2[i]);
		sino
			escriure("bah");
		fisi;
	fins i==10;

fiprog
